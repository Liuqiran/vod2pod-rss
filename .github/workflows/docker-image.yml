# This is a basic workflow to help you get started with Actions
name: deploy to dockerhub
# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ stable ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  cargo_version_bump:
    runs-on: ubuntu-latest
    steps:
      - name: Set Swap Space
        uses: pierotofy/set-swap-space@v1.0
        with:
          swap-size-gb: 10
      - run: |
          # Workaround for https://github.com/rust-lang/cargo/issues/8719
          sudo mkdir -p /var/lib/docker
          sudo mount -t tmpfs -o size=10G none /var/lib/docker
          sudo systemctl restart docker
      - uses: actions/checkout@v3
      - name: Bump patch version
        run: |
          # Get the current version
          VERSION=$(grep -oP '^version = "\K[0-9]+\.[0-9]+\.[0-9]+' Cargo.toml)
          # Bump the minor version
          NEW_VERSION=$(echo $VERSION | awk -F "." '{print $1"."$2"."($3+1)}')
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          # Replace the old version with the new version
          sed -i "s/^version = \"$VERSION\"/version = \"$NEW_VERSION\"/" Cargo.toml
        shell: bash
      - name: Commit and push changes
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Action"
          git tag -a v$NEW_VERSION -m "Bump patch version to $NEW_VERSION"
          git commit -a -m "Bump patch version to $NEW_VERSION"
          git push origin HEAD --follow-tags
          git fetch --unshallow
          git checkout main
          git merge stable
          git push origin HEAD --follow-tags
          git checkout stable

  push_to_Docker_Hub:
      needs: cargo_version_bump
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      # build docker image and push to docker hub
      # only if the app build and test successfully
      steps:
        - name: checkout repo
          uses: actions/checkout@v3
        - name: Bump patch version
          run: |
            # Get the current version
            VERSION=$(grep -oP '^version = "\K[0-9]+\.[0-9]+\.[0-9]+' Cargo.toml)
            echo "VERSION=${VERSION}" >> $GITHUB_ENV
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v2
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Login to DockerHub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Build and push
          uses: docker/build-push-action@v4
          with:
            context: ./
            file: ./Dockerfile
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/vod-to-podcast:latest,${{ secrets.DOCKERHUB_USERNAME }}/vod-to-podcast:${{ env.VERSION }}
            platforms: linux/amd64,linux/arm64,linux/arm/v7
